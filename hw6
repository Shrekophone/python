#https://projecteuler.net/problem=36

#The decimal number, 585 = 1001001001 in binary, is palindromic in both bases.
#Find the sum of all numbers, less than one million, which are palindromic in
#base 10 and base 2. (Please note that the palindromic number,
#in either base, may not include leading zeros.)

#Напишите программу, которая решает описанную выше задачу и печатает ответ.

def palindrom(number):

    return(number == number[::-1])

total = 0
print(total)
import math
digits = 2
number = [0]*digits
while(True):
    if (number == [9]*digits):
        digits+=1
        if (digits == 7):
            break
        number = [0]*digits
    number[-1] += 1

    if (number[-1] == 10):
        number[-2]+=1
        number[-1]=1
        for i in range(2,math.floor(digits/2)+1):
            if (number[-i] == 10):
                number[-(i+1)]+=1
                number[-i]=0
    for j in range(1,math.floor(digits/2)+1):
        number[j-1] = number[-j]
    intNumber = 0
    for k in range(len(number)):
        intNumber += number[k]*(10**k)
    if palindrom("{0:b}".format(intNumber)):
        total += intNumber
        print("      ",intNumber)
        print("{0:b}".format(intNumber))
total=0
def decPalindromeGen(l,u):
    for i in range(l,u):
        if isDecPalindrome(i):
            yield i
print(total)
